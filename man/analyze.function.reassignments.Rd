% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/analyzeFunctionReassignments.R
\name{analyze.function.reassignments}
\alias{analyze.function.reassignments}
\title{Tracking Function Reassignments}
\usage{
analyze.function.reassignments(var = NA)
}
\arguments{
\item{var}{Optional. Variable name(s) to be queried. If not NA, the results will
be filtered to show only those with the given variable name.}
}
\value{
A list of data frames for each variable with at least 2 function assignments.
}
\description{
Returns a data frame for each variable in the execution containing the 
instances where the data type changed.
Each data frame contains the following columns:
\itemize{
	\item value: The value of the variable.
	\item code: The line of code associated with the variable.
	\item scriptNum: The script number associated with the variable.
	\item startLine: The line number associated with the variable.
}
}
\details{
analyze.function.reassignments belongs to provAnalyzeR, an analyzer which utilises provenance 
collected during-execution to perform dynamic analysis and identify coding anomalies.

This function may be used independently after the analyzer has been initialised using
one of its initialisation functions (listed below). Alternatively, it is run by the prov.analyze
functions in order to summarize analysis.
}
\examples{
\dontrun{
prov.analyze.run("test.R")
analyze.function.reassignments()
}

}
\seealso{
provAnalyzeR Initialisation Functions:

\code{\link{prov.analyze}}

\code{\link{prov.analyze.file}}

\code{\link{prov.analyze.run}}
}
