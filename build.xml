<project
	xmlns:if="ant:if"
    xmlns:unless="ant:unless">
    
	<loadproperties srcFile="DESCRIPTION" />
	<property name="tarfile" value="provAnalyzeR_${Version}.tar.gz" />

 	<target name="roxygenize">
    	<exec executable="Rscript" >
    		<arg line="-e roxygen2::roxygenise()"/>
    	</exec>
	</target>
 		
    <target name="build" depends="roxygenize">
    	<exec executable="R" >
    		<arg line="CMD build --no-build-vignettes ."/>
    	</exec>
    </target>

	<target name="check" depends="build">
		<exec executable="R" >
  			<arg line="CMD check --no-vignettes --no-build-vignettes ${tarfile}"/>
	   	</exec>
    </target>

    <target name="install" depends="check">
        <exec executable="R" >
  			<arg line="CMD INSTALL ${tarfile}"/>
		</exec>
    </target>
    
    <target name="install-no-check" depends="build">
        <exec executable="R" >
  			<arg line="CMD INSTALL ${tarfile}"/>
		</exec>
    </target>
    
  <!-- === CREATE JSON =================================================== -->
	
	<!-- 
		Creates up-to-date json files for testing.
		Does not include sourced files.
	-->
	<target name="create-json">
	  <!-- empty -->
		<antcall target="create-one-json">
			<param name="script" value="empty"/>
		</antcall>
		
		<!-- no data nodes -->
		<antcall target="create-one-json">
			<param name="script" value="noDataNodes"/>
		</antcall>
		
		<!-- no variables -->
		<antcall target="create-one-json">
			<param name="script" value="noVars"/>
		</antcall>
		
		<!-- exceptions -->
		<antcall target="create-one-json">
			<param name="script" value="exceptions"/>
		</antcall>
		
		<!-- type changes -->
		<antcall target="create-one-json">
			<param name="script" value="typeChanges"/>
		</antcall>
		
		<!-- function reassignment -->
    <antcall target="create-one-json">
      <param name="script" value="functionReassignments"/>
    </antcall>
    
    <!-- invalid variable names -->
    <antcall target="create-one-json">
      <param name="script" value="invalidNames"/>
    </antcall>
		
		<!-- preexisting variables -->
		<antcall target="create-one-json">
      <param name="script" value="preexisting"/>
      <param name="console.mode" value="true"/>
    </antcall>
    
		<!--<antcall target="create-one-json">
			<param name="script" value="warnings"/>
		</antcall>-->
	</target>
	
	<target name="create-one-json">
		<antcall target="json">
			<param name="theFile" value="${script}.R"/>
		</antcall>
		<antcall target="analyze">
			<param name="theFile" value="${script}.json"/>
		</antcall>
	</target>	
	
	<target name="analyze">
		<basename property="scriptname" file="${theFile}" suffix="json" />
		<exec executable="Rscript" dir="inst/testdata" output="${scriptname}.analysis">
			<arg line="-e &quot;provAnalyzeR::prov.analyze.file('${theFile}')&quot;" />
		</exec>
		<echo> Comparing analyses </echo>
		<exec executable="diff">
			<arg value="--strip-trailing-cr"/>
			<arg file="inst/testanalyses/${scriptname}.expected"/>
			<arg file="${scriptname}.analysis"/>
		</exec>
		<input
			message="Do you want to update the expected analysis for ${scriptname}?"
			validargs="y,n"
			addproperty="answer"
		/>
		<condition property="do.update">
			<equals arg1="y" arg2="${answer}"/>
		</condition>
		<antcall target="update-analysis">
			<param name="script" value="${scriptname}"/>
		</antcall>
		<antcall target="delete-analysis">
			<param name="script" value="${scriptname}"/>
		</antcall>
	</target>
	
	<target name="update-analysis" if="do.update">
		<echo> Updating the analysis </echo>
		<move file="${script}.analysis" tofile="inst/testanalyses/${script}.expected" />
	</target>
	
	<target name="delete-analysis" unless="do.update">
		<echo> Deleting the new analysis </echo>
        <delete file="${script}.analysis"/>
	</target>
	
	<target name="json">
	  <!-- default: values of parameters to prov.run -->
		<condition property="snapshot.size" value='0'>
			<not><isset property="snapshot.size"/></not>
		</condition>
		
		<!-- default: delete prov folder after it is created -->
		<condition property="delete.dir" value="true">
			<not><isset property="delete.dir"/></not>
		</condition>
		
		<!-- default: console mode is false -->
		<condition property="console.mode" value="false">
			<not><isset property="console.mode"/></not>
		</condition>
	  
	  <!-- run script -->
		<echo message="${theFile}"/>
		<exec if:true="${console.mode}" executable="Rscript" dir="inst">
      <arg line="testscripts/${theFile}"/>
    </exec>
    <exec unless:true="${console.mode}" executable="Rscript" dir="inst">
        <arg line="-e &quot;rdtLite::prov.run('testscripts/${theFile}', prov.dir='testdata', snapshot.size=${snapshot.size})&quot;"/>
    </exec>
		<basename property="scriptname" file="${theFile}" suffix="R" />
		  <!-- move prov.json file to testdata folder -->
    <move if:true="${console.mode}"
      file="inst/testdata/prov_console/prov.json"
      tofile="inst/testdata/${scriptname}.json"
    />
    <move unless:true="${console.mode}"
      file="inst/testdata/prov_${scriptname}/prov.json"
      tofile="inst/testdata/${scriptname}.json"
    />

    <!-- delete prov directory if it is not needed anymore -->
    <antcall if:true="${delete.dir}" target="delete.prov.dir"/>
	</target>
	
	<!-- delete prov directory -->
	<target name="delete.prov.dir">
		<delete if:true="${console.mode}" 
				dir="inst/testdata/prov_console"
		/>
		<delete unless:true="${console.mode}" 
				dir="inst/testdata/prov_${scriptname}"
		/>
	</target>

  <target name="cran-check" depends="build, create-json">
    <exec executable="R" >
  		<arg line="CMD check --as-cran --no-vignettes --no-build-vignettes ${tarfile}"/>
  	</exec>    
  </target>

  <target name="clean">
      <delete dir="provAnalyzeR.Rcheck" verbose="false"/>
      <delete file="${tarfile}" verbose="false"/>
  </target>

	
</project>
